name: CI
# This workflow is triggered on pushes & pull requests
on: [push]

jobs:
  validate:
    name: Validate Schema
    runs-on: ubuntu-latest
    container: 'golang:latest'
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Validate
        run: |
          go mod vendor
          go run cmd/validate/validate.go
          go test ./...

  build:
    name: Build ${{ matrix.cfg.goos }}/${{ matrix.cfg.goarch }}
#    container: 'golang:latest'
    runs-on: ${{ matrix.cfg.on }}
    env:
      GOOS: ${{ matrix.cfg.goos }}
      GOARCH: ${{ matrix.cfg.goarch }}
      GOARM: ${{ matrix.cfg.goarm }}
      STATIC: true
    strategy:
      matrix:
        cfg:
          - { on: ubuntu-latest,  goos: linux,      goarch: amd64 }
          - { on: ubuntu-latest,  goos: linux,      goarch: arm,    goarm: 5 }
          - { on: ubuntu-latest,  goos: linux,      goarch: arm,    goarm: 6 }
          - { on: ubuntu-latest,  goos: linux,      goarch: arm,    goarm: 7 }
          - { on: ubuntu-latest,  goos: linux,      goarch: arm64 }
          - { on: macos-latest,   goos: darwin,     goarch: amd64 }
          - { on: macos-latest,   goos: darwin,     goarch: arm64 }
          - { on: macos-latest,   goos: freebsd,    goarch: amd64 }
          - { on: windows-latest, goos: windows,    goarch: amd64 }
          - { on: windows-latest, goos: windows,    goarch: arm64 }
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - uses: actions/setup-go@v3
        with:
          go-version: '^1.18.3'
      - name: Build Binaries
        run: |
          go version
          go env
          go mod vendor
          go build -ldflags "-X main.goos=${GOOS} -X main.goarch=${GOARCH}" -o vanish-${{ matrix.cfg.goos }}-${{ matrix.cfg.goarch }}${{ matrix.cfg.goarm }} -tags "static netgo" ./cmd/vanish/vanish.go
      - name: Archive
        uses: actions/upload-artifact@v2
        with:
          name: binaries.zip
          path: |
            vanish-*


